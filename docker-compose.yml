version: "3.9"

services:
  postgres:
    image: ankane/pgvector:latest
    environment:
      POSTGRES_USER: ${POSTGRES_USER:-ci}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-ci_pass}
      POSTGRES_DB: ${POSTGRES_DB:-ci_db}
    ports: ["5432:5432"]
    volumes:
      - pgdata:/var/lib/postgresql/data
      - ./db-init:/docker-entrypoint-initdb.d

  redis:
    image: redis:7-alpine
    ports: ["6379:6379"]

  api:
    build: { context: ./backend }
    environment:
      DATABASE_URL: postgresql+psycopg2://${POSTGRES_USER:-ci}:${POSTGRES_PASSWORD:-ci_pass}@postgres:5432/${POSTGRES_DB:-ci_db}
      REDIS_URL: redis://redis:6379/0
      SEC_USER_AGENT: ${SEC_USER_AGENT:-CommonInvestor/0.1 you@example.com}
      PYTHONPATH: /app
    depends_on: [postgres, redis]
    ports: ["8080:8080"]
    command: ["/bin/sh","-c","sleep 10 && alembic upgrade head && uvicorn app.main:app --host 0.0.0.0 --port 8080 --reload"]
    volumes: [ "./backend:/app" ]

  worker:
    build: { context: ./backend }
    environment:
      DATABASE_URL: postgresql+psycopg2://${POSTGRES_USER:-ci}:${POSTGRES_PASSWORD:-ci_pass}@postgres:5432/${POSTGRES_DB:-ci_db}
      REDIS_URL: redis://redis:6379/0
      SEC_USER_AGENT: ${SEC_USER_AGENT:-CommonInvestor/0.1 you@example.com}
      PYTHONPATH: /app
    depends_on: [postgres, redis]
    command: ["/bin/sh","-c","celery -A app.workers.celery_app worker --loglevel=INFO"]
    volumes: [ "./backend:/app" ]

  scheduler:
    build: { context: ./backend }
    environment:
      DATABASE_URL: postgresql+psycopg2://${POSTGRES_USER:-ci}:${POSTGRES_PASSWORD:-ci_pass}@postgres:5432/${POSTGRES_DB:-ci_db}
      REDIS_URL: redis://redis:6379/0
      SEC_USER_AGENT: ${SEC_USER_AGENT:-CommonInvestor/0.1 you@example.com}
      PYTHONPATH: /app
    depends_on: [redis]
    command: ["/bin/sh","-c","celery -A app.workers.celery_app beat --loglevel=INFO"]
    volumes: [ "./backend:/app" ]

  ui:
    build: { context: ./ui }
    environment:
      NEXT_PUBLIC_API_URL: http://localhost:8080
    depends_on: [api]
    ports: ["3000:3000"]
    command: ["/bin/sh","-c","npm install && npm run dev -- --port 3000 --hostname 0.0.0.0"]
    volumes: [ "./ui:/usr/src/app" ]

volumes:
  pgdata: